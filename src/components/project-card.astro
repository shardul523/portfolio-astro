---
import { Image } from "astro:assets";
import ChatRooms from '../images/ChatRooms.png'
import TVWiz from '../images/Tv-Wiz.jpg'
import TICTACTOE from '../images/TIC-TAC-TOE.jpg'

const ImageMap = new Map([
    ['ChatRooms', ChatRooms],
    ['TVWiz', TVWiz],
    ['TICTACTOE', TICTACTOE]
]);

const {project} = Astro.props;

const {title, info, iname, codeLink, demoLink} = project;

const image = ImageMap.get(iname);
---

<article class="flip-card">
    <div class="flip-card-inner">
        <div class="flip-card-front">
            <Image src={image} alt={`${title} image`} />
        </div>
        <div class="flip-card-back flex-column justify-center align-center gap-5">
            <h4>{title}</h4>
            <p>{info}</p>
            <div>
                <a class="button-link code-link" href={codeLink}>Get Code</a>
                <a class="button-link code-link" href={demoLink}>Live Demo</a>
            </div>
        </div>
    </div>
</article>

<style>
.flip-card {
  background-color: transparent;
  border: 1px solid var(--primary-color);
  width: 250px;
  height: 300px;
  border-radius: 10px;
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

/* This container is needed to position the front and back side */
.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

/* Do an horizontal flip when you move the mouse over the flip box container */
.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

/* Position the front and back side */
.flip-card-front, .flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
}

/* Style the front side (fallback if image is missing) */
.flip-card-front {
  background-color: #bbb;
  color: black;
  border-radius: 10px;
}

.flip-card-front img {
  width: 100%;
  height: 100%;
  border-radius: 10px;
}

/* Style the back side */
.flip-card-back {
  background-color: var(--primary-color);
  color: var(--secondary-color);
  transform: rotateY(180deg);
  border-radius: 10px;
}

.code-link {
    transition: none;
    background-color: var(--secondary-color);
    color: var(--tertiary-color);

    &:hover {
      background-color: var(--secondary-color-subtle);
      color: var(--secondary-color);
    }
}
</style>